version: "3"
services:
    www:
        build: dockers/apache/
        ports: 
            - "8001:80"
        volumes:
#            - ./src:/var/www/html/
            - C:\Users\ingjr\Proyectos\php\proyecto1/conf/apache/000-default.conf:/etc/apache2/sites-available/000-default.conf
            - C:\Users\ingjr\Proyectos\php\proyecto1\src:/var/www/html/
        links:
            - db
        networks:
            - default
    node:
        build: dockers/node/
        ports: 
            - "3000:3000"
        volumes:
            - C:\Users\ingjr\Proyectos\php\proyecto1\dockers\node\src_node\visor:/app
        working_dir: "/app"
        #volumes:
            #    - ./app:/var/www/app
        command: bash -c "npm install && npm run dev"
        links:
            - db
        networks:
            - default
    nginx: 
        image: nginx:latest 
        container_name: proyecto1_nginx_1
        volumes: 
            - C:\Users\ingjr\Proyectos\php\proyecto1/conf/nginx/reverse_proxy.conf:/etc/nginx/conf.d/default.conf
        ports: 
            - 8080:8080
        links:
            - www
        networks:
        - default
    scrap:
        image: python
        volumes:
            - C:\Users\ingjr\Proyectos\php\proyecto1\src2\:/root
        links:
            - db
        networks:
            - default
        tty: true
    db:
        image: mysql
        ports: 
            - "3306:3306"
        environment:
            MYSQL_DATABASE: analizerdb
            MYSQL_USER: user
            MYSQL_PASSWORD: test
            MYSQL_ROOT_PASSWORD: test
        volumes:
            #- ./dump:/docker-entrypoint-initdb.d
            - C:\Users\ingjr\Proyectos\php\proyecto1/conf/mysql/:/etc/mysql/conf.d 
            - persistent:/var/lib/mysql
        networks:
            - default
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        links: 
            - db:db
        ports:
            - 8000:80
        environment:
            MYSQL_USER: user
            MYSQL_PASSWORD: test
            MYSQL_ROOT_PASSWORD: test
volumes:
    persistent: